@model IEnumerable<sa47.team8ad.SSIS.Models.ItemViewModel>

@{
    ViewBag.Title = "Generate Purchase Order";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
@if (TempData["message"] != null)
{
    <div class="alert alert-success fade in">
        <a href="#" class="close" data-dismiss="alert">&times;</a>
        <strong>@TempData["message"]</strong>
    </div>
}
@if (TempData["errorMessage"] != null)
{
    <div class="alert alert-danger fade in">
        <a href="#" class="close" data-dismiss="alert">&times;</a>
        <strong>@TempData["errorMessage"]</strong>
    </div>
}
<p>
    @Html.ActionLink("Add Item To Purchase", "AddOrder", null, new { @class = "btn btn-success" })
</p>
<div class="box box-danger">
    <div class="box-header">
        <h3 class="box-title">Generate Purchase Order</h3>
    </div>
    <div class="box-body">
        @if (Model.Count() > 0)
        {
            using (Html.BeginForm("GenerateOrder", "PurchaseOrder", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.Hidden("purchaseItems")
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>  # </th>

                            <th>
                                @Html.DisplayNameFor(model => model.ItemDescription)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ReorderLevel)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ReorderQuantity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.QuantityOnHand)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MeasurementUnit.UnitName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.supplierId)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.Remark)
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int i = 0;
                            foreach (var item in Model)
                            {
                                i++;
                                <tr id="row" @i>
                                    <td>
                                        <text>@i</text>
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.ItemDescription)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ReorderLevel)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(modelItem => item.ReorderQuantity, htmlAttributes: new { @class = "form-control" })
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.QuantityOnHand)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MeasurementUnit.UnitName)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(x => item.supplierId, ViewBag.bindSuppliers as IEnumerable<SelectListItem>
                                           , htmlAttributes: new { @class = "form-control" })
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Remark)
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <div class="form-group">
                    <div class="col-sm-10">
                        <button class="btn btn-danger" type="reset">
                            Reset
                        </button>
                        <button class="btn btn-success" id="btnSubmit" type="submit">
                            Generate Purchase Order
                        </button>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="panel panel-info">
                <div class="panel-body">
                    There is no item to generate.
                </div>
            </div>
        }

    </div>
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
@*<script src="~/Scripts/bootstrap.js"></script>*@
<script type="text/javascript">
    $(document).ready(function () {
        $('#btnSubmit').on("click",function (evt) {
        evt.preventDefault();
        var users = [];
        users =  @Html.Raw(Json.Encode(Model)) ;
        var counter = 0;
        $('table tbody tr').each(function () {
            var reorderQty = $('#item_ReorderQuantity', this).val();
            var supplierId = $('#item_supplierId', this).val();
            users[counter].ReorderQuantity = reorderQty;
            users[counter].supplierId = supplierId;
            counter++;
        });
        //console.log(users)
        console.log(JSON.stringify(users))
        $("#purchaseItems").val(JSON.stringify(users))
        //$.ajax({
        //    url: 'GenerateOrder',
        //    type: 'POST',
        //    dataType: "json",
        //    contentType: 'application/json',
        //    data: JSON.stringify(users)
        //});
        $('form').submit();
        return false;
    });
});
</script>
