@model sa47.team8ad.SSIS.Models.ItemViewModel

@{
    ViewBag.Title = "Edit Item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<div class="box box-danger">
    <div class="box-header">
        <h3 class="box-title">Edit - @Model.ItemDescription</h3>
    </div>
    <div class="box-body">
        @using (Html.BeginForm("EditItem", "MaintainInventory", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.ItemId)
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.ReorderLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ReorderLevel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReorderLevel, "", new { @class = "text-danger", type = "number", min = "1" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ReorderQuantity, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ReorderQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReorderQuantity, "", new { @class = "text-danger", type = "number", min = "1" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QuantityOnHand, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.QuantityOnHand, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
                        @Html.ValidationMessageFor(model => model.QuantityOnHand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(y => y.LocationId, ViewBag.bindLocations as IEnumerable<SelectListItem>, "-Select Item-",
                      htmlAttributes: new{ @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.LocationId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-10">
                        @Html.ActionLink("Back", "ItemsList", null, new { @class = "btn btn-danger" })
                        <input type="submit" value="Update" class="btn btn-primary" />
                    </div>
                </div>
            </div>
           
        }
    </div>
</div>
