@model IEnumerable<sa47.team8ad.SSIS.Models.SupplierItemViewModel>

@{
    ViewBag.Title = "SupplierItemDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<p>
    @Html.ActionLink("Add New Supplier Item", "AddSupplierItem", new { id = Model.FirstOrDefault().SupplierId },new { @class="btn btn-success"})
</p>
<div class="box box-danger">
    <div class="box-header">
        <h3 class="box-title">
            @if (Model != null)
            {@Model.FirstOrDefault().SupplierName} - Item List
        </h3>
    </div>
    <div class="box-body">
        <form method="post" action="~/MaintainSupplier/EditSupplierItem">
            <input type="hidden" name="supplierItemObj" id="supplierItemObj" />
            <table class="table table-striped table-bordered" id="dtBasicExample">
                <thead>
                    <tr>
                        <th>  # </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ItemDescription)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TenderPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Remark)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Priority)
                        </th>
                        <th></th>
                </thead>
                <tbody>
                    @{
                        int index = 0;
                        foreach (var item in Model)
                        {

                            index++;
                            <tr id="row" @index  data-supplieritem-id="@item.SupplierItemId">
                                <td>
                                    <text>@index</text>
                                    @Html.HiddenFor(modelItem => item.SupplierItemId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemDescription)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UnitName)
                                </td>
                                <td class="priceCol">
                                    $@Html.DisplayFor(modelItem => item.TenderPrice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remark)
                                    @if (item.Remark == null)
                                    {
                                        <text> - </text>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Priority)
                                </td>
                                <td>

                                    @*@Html.ActionLink("Edit", "EditSupplierItem", new { id = item.SupplierItemId }, new { @class = "btn btn-success" })*@
                                    @Html.ActionLink("Delete", "DeleteSupplierItem", new { id = item.SupplierItemId }, new { @class = "btn btn-danger btnDelete" })
                                    <button type="button" class="btnEdit btn btn-success">Edit</button>
                                    <button type="submit" class="btnUpdate btn btn-success" style="display:none;">Update</button>
                                    <button type="button" class="btnCancel btn btn-danger" style="display:none;">Cancel</button>
                                </td>
                            </tr>
                        }

                    }
            </table>

            <div class="">
                <div>
                    @Html.ActionLink("Back", "SupplierList", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        </form>
    </div>
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        var t = $('#dtBasicExample').DataTable({
            "columnDefs": [{
                "searchable": false,
                "orderable": false,
                "targets": 0
            }],
            "order": [[1, 'asc']]
        });

        t.on('order.dt search.dt', function () {
            t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
        var tempArr = [];
        $("#dtBasicExample").on("click", ".btnEdit", function () {
            $(this).hide();
            $(this).prev(".btnDelete").hide();
            $(this).next(".btnUpdate").show();
            $(this).next(".btnUpdate").next(".btnCancel").show();
            var $rows = $(this).parent()             // Moves up from <button> to <td>
                .parent();//move up td to tr
            var priceCol = $(this).closest("tr").find("td.priceCol");

            var supplieritemId = $($rows).data("supplieritemId");
            var actualValueBeforeEdit = priceCol.text().replace("$", "");
            var tempObj = {
                SupplierItemId: supplieritemId,
                OriginalTenderPrice: actualValueBeforeEdit.trim()
            }
            tempArr.push(tempObj);
            window.localStorage.setItem('getOriginalActualQty', JSON.stringify(tempArr));
            //   console.log(JSON.parse(window.localStorage.getItem('getOriginalActualQty')))
            priceCol.text('');
            priceCol.append("<input type='text' value='" + actualValueBeforeEdit.trim() + "' class='form-control tenderPrice' />");
        });
        $("#dtBasicExample").on("click", ".btnUpdate", function (evt) {
            evt.preventDefault();
            var $rows = $(this).parent()             // Moves up from <button> to <td>
                .parent();//move up td to tr
            var supplieritemId = $($rows).data("supplieritemId");
            var tenderprice = $($rows).find("td:eq(3) input").val().replace("$", "");
            if (parseInt(tenderprice) <= 0) {
                alert("Tender price should be greater than or equal to zero.");
                return;
            }
        
            $(this).hide();
            $(this).next(".btnCancel").hide();
            $(this).prev(".btnEdit").show();
            $(this).prev(".btnEdit").prev(".btnDelete").show();
            var obj = {
                SupplierItemId: supplieritemId,
                TenderPrice: tenderprice
            };
            $("#supplierItemObj").val(JSON.stringify(obj));
            $('form').attr('action','@Url.Action("EditSupplierItem", "MaintainSupplier")').submit();
        });

        $("#dtBasicExample").on("click", ".btnCancel", function () {
            var $rows = $(this).parent()             // Moves up from <button> to <td>
                .parent();//move up td to tr

            var priceCol = $(this).closest("tr").find("td.priceCol");
            priceCol.find("input.tenderPrice").remove();
            var priceCol = $(this).closest("tr").find("td.priceCol");
            var supplieritemId = $($rows).data("supplieritemId");
            var regainOriginActualQty = JSON.parse(window.localStorage.getItem('getOriginalActualQty'));
          
            for (var i = 0; i < regainOriginActualQty.length; i++) {
                if (supplieritemId == regainOriginActualQty[i].SupplierItemId) {
                  
                    priceCol.text('$'+regainOriginActualQty[i].OriginalTenderPrice);
                    tempArr = $.grep(regainOriginActualQty,
                        function (o, i) { return o.supplieritemId === supplieritemId; },
                        true);
                    window.localStorage.setItem('getOriginalActualQty', JSON.stringify(tempArr));
                }
            }

            $(this).hide();
            $(this).prev(".btnUpdate").hide();
            $(this).prev().prev(".btnEdit").show();
            $(this).prev().prev().prev(".btnDelete").show();
        });
    });
</script>